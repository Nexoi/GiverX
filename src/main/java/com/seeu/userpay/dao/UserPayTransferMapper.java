package com.seeu.userpay.dao;

import com.seeu.userpay.model.UserPayTransfer;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserPayTransferMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userpay_trans
     *
     * @mbggenerated Wed Jan 18 03:42:33 CST 2017
     */
    @Delete({
        "delete from userpay_trans",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userpay_trans
     *
     * @mbggenerated Wed Jan 18 03:42:33 CST 2017
     */
    @Insert({
        "insert into userpay_trans (id, UID, ",
        "toUID, money, paytype, ",
        "paybankID, note)",
        "values (#{id,jdbcType=INTEGER}, #{UID,jdbcType=INTEGER}, ",
        "#{toUID,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, #{paytype,jdbcType=VARCHAR}, ",
        "#{paybankID,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})"
    })
    int insert(UserPayTransfer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userpay_trans
     *
     * @mbggenerated Wed Jan 18 03:42:33 CST 2017
     */
    @InsertProvider(type=UserPayTransferSqlProvider.class, method="insertSelective")
    int insertSelective(UserPayTransfer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userpay_trans
     *
     * @mbggenerated Wed Jan 18 03:42:33 CST 2017
     */
    @Select({
        "select",
        "id, UID, toUID, money, paytype, paybankID, note",
        "from userpay_trans",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="UID", property="UID", jdbcType=JdbcType.INTEGER),
        @Result(column="toUID", property="toUID", jdbcType=JdbcType.INTEGER),
        @Result(column="money", property="money", jdbcType=JdbcType.INTEGER),
        @Result(column="paytype", property="paytype", jdbcType=JdbcType.VARCHAR),
        @Result(column="paybankID", property="paybankID", jdbcType=JdbcType.VARCHAR),
        @Result(column="note", property="note", jdbcType=JdbcType.VARCHAR)
    })
    UserPayTransfer selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userpay_trans
     *
     * @mbggenerated Wed Jan 18 03:42:33 CST 2017
     */
    @UpdateProvider(type=UserPayTransferSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserPayTransfer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userpay_trans
     *
     * @mbggenerated Wed Jan 18 03:42:33 CST 2017
     */
    @Update({
        "update userpay_trans",
        "set UID = #{UID,jdbcType=INTEGER},",
          "toUID = #{toUID,jdbcType=INTEGER},",
          "money = #{money,jdbcType=INTEGER},",
          "paytype = #{paytype,jdbcType=VARCHAR},",
          "paybankID = #{paybankID,jdbcType=VARCHAR},",
          "note = #{note,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserPayTransfer record);
}